model;


param NumAssets > 0;
param Cov{1..NumAssets,1..NumAssets};
param ExpReturn{1..NumAssets};
param PortfolioExpReturn;

#model variables
var w{1..NumAssets} >= 0;

#model objective
maximize Sharpe:
  sum {i in 1..NumAssets, j in 1..NumAssets} (Cov[i,j]*w[i]*w[j]);

#model constraints
s.t. Balance:
sum {i in 1..NumAssets} w[i] = 1;

s.t. ExpRet:
sum {i in 1..NumAssets} ExpReturn[i]*w[i] >= PortfolioExpReturn;

data;
param NumAssets := 11;
#param NumPeriods := 205;

param Cov: 1 2 3 4 5 6 7 8 9 10 11 :=
1 0.002884609	0.000964201	0.001514085	0.002522081	0.002640751	0.001521207	0.002362696	0.002559972	0.002177385	0.002588583	0.000754692
2 0.000964201	0.001222969	0.000792949	0.001244583	0.00125656	0.000752952	0.001024622	0.001013393	0.000950778	0.000705852	0.000797685
3 0.001514085	0.000792949	0.003939442	0.001764785	0.001846525	0.001028622	0.002091376	0.002638017	0.001420247	0.00174736	0.001184934
4 0.002522081	0.001244583	0.001764785	0.004321677	0.003888026	0.001625026	0.002614412	0.002710869	0.002279983	0.002364823	0.000931351
5 0.002640751	0.00125656	0.001846525	0.003888026	0.003974539	0.001643866	0.00267663	0.002769869	0.002574933	0.002256403	0.00104125
6 0.001521207	0.000752952	0.001028622	0.001625026	0.001643866	0.001655559	0.001523842	0.001605011	0.001285147	0.001770363	0.000709099
7 0.002362696	0.001024622	0.002091376	0.002614412	0.00267663	0.001523842	0.002894144	0.002904035	0.002103708	0.002460855	0.001021752
8 0.002559972	0.001013393	0.002638017	0.002710869	0.002769869	0.001605011	0.002904035	0.00402886	0.001820833	0.002459796	0.001038577
9 0.002177385	0.000950778	0.001420247	0.002279983	0.002574933	0.001285147	0.002103708	0.001820833	0.00750289	0.002036422	0.001473595
10 0.002588583	0.000705852	0.00174736	0.002364823	0.002256403	0.001770363	0.002460855	0.002459796	0.002036422	0.004919951	0.000574783
11 0.000754692	0.000797685	0.001184934	0.000931351	0.00104125	0.000709099	0.001021752	0.001038577	0.001473595	0.000574783	0.001889597;

param ExpReturn: 1 2 3 4 5 6 7 8 9 10 11 := 1 0.74	0.55	0.77	0.12	0.31	0.65	0.65	0.70	1.47	0.45	0.60;

options randseed 1;
options solver cplex;


# efficient frontier loop
for {r in 1..14} {
  let PortfolioExpReturn := r/10;
  solve;
  
  display PortfolioExpReturn;
  display ExpRet.body;
  display sqrt(Variance);
  display ExpRet.body, sqrt(Variance) >> output.txt; 
  display w;
}

